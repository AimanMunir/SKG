package kg

import scala.collection.mutable.HashMap
import scala.collection.immutable.{Vector,Range}
        
trait EdgeType(_name : String) extends ElementTracker[Edge]{    

    var name = _name
    def reName(name : String) = {this.name = name}
    def getName() : String =  name

    override def getElements() : Vector[Edge] =
        this.elements.foldLeft(Vector[Edge]())((x,y) => x :+ y)
    
    def apply(properties : HashMap[String,Primitive]) : Edge =
    {
        try{
            validate(properties)
            val node = new Edge()
            node.setProperties(properties) 
            elements = elements :+ edge
            //print(s"from apply, edges: ${this}")
            node
        }catch{
            case e  : Exception =>
                {
                    println(s"WARNING: Invalid element for EdgeType ${name}.")
                    println(s"${e.getMessage()}")
                    println("Edge Not Added.")
                    throw new Exception()
                } // case e
        } // catch
    } // apply
}